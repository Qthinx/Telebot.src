from Functions.USER_Profile import profile_info_money_func, profile_info_status_func
from Functions.KUNA_API import parcing
from Functions.USER_activity import user_activity
from Functions.INPUT_Time import Time_operations
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import Bot, Dispatcher, types, Router, F
from Functions.BOT_settings import TOKEN
import asyncio

dp = Dispatcher()
router1 = Router()
bot = Bot(token=TOKEN, parse_mode="HTML")

@router1.message()
async def inline_key_start(call: types.Message):
    builder = InlineKeyboardBuilder()
    builder.button(text='üè≥Ô∏è–°—Ç–∞—Ä—Ç', callback_data='start')
    builder.button(text='üì∞–ù–æ–≤–∏–Ω–∏', callback_data='news')             
    builder.button(text='üí¨–ß–∞—Ç', callback_data='chat')
    builder.button(text='üóÑ–ö–∞–±—ñ–Ω–µ—Ç', callback_data='cabinet')
    builder.button(text='üë§–û–ø–µ—Ä–∞—Ç–æ—Ä', callback_data='operator')
    builder.button(text='‚ûï–ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –ë–∞–ª–∞–Ω—Åüí≤', callback_data='balance')
    builder.adjust(1)          

    await call.answer("üë®‚Äçüíª–ü—Ä–∏–≤—ñ—Ç, {0.full_name}\nüî¢–í–∞—à id: {0.id} ".format(call.from_user),
                                 reply_markup=builder.as_markup())

    RunPerson = user_activity()
    RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–æ–º—É –º–µ–Ω—é"
    RunPerson.last_activity(call)
    
@router1.callback_query(F.data == "back")
async def callback_inline(call):
        builder = InlineKeyboardBuilder()
        builder.button(text='üè≥Ô∏è–°—Ç–∞—Ä—Ç', callback_data='start')
        builder.button(text='üì∞–ù–æ–≤–∏–Ω–∏', callback_data='news')               
        builder.button(text='üí¨–ß–∞—Ç', callback_data='chat')
        builder.button(text='üóÑ–ö–∞–±—ñ–Ω–µ—Ç', callback_data='cabinet')
        builder.button(text='üë§–û–ø–µ—Ä–∞—Ç–æ—Ä', callback_data='operator')
        builder.button(text='‚ûï–ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –ë–∞–ª–∞–Ω—Åüí≤', callback_data='balance')
        builder.adjust(1) 
        
        await call.message.edit_text('üë®‚Äçüíª–ü—Ä–∏–≤—ñ—Ç, {0.username}\nüî¢–í–∞—à id: {0.id}'.format(call.from_user),
                                     reply_markup=builder.as_markup())

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–µ –º–µ–Ω—é"
        RunPerson.last_activity(call)

@router1.callback_query(F.data == "news")
async def callback_inline(call):
        builder = InlineKeyboardBuilder()
        builder.button(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back')
        builder.adjust(1)
        await call.message.edit_text('–ù–æ–≤–∏–Ω–∏: (–Ω–µ–º–∞—î)', reply_markup=builder.as_markup())

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –Ω–æ–≤–∏–Ω"
        RunPerson.last_activity(call)

@router1.callback_query(F.data == "chat")
async def callback_inline(call):
        builder = InlineKeyboardBuilder()
        builder.button(text='–ù–∞—à —á–∞—Ç', url='https://www.youtube.com/')
        builder.button(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back')
        builder.adjust(1)
        await call.message.edit_text('–ß–∞—Ç–∏: ', reply_markup=builder.as_markup())

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é —á–∞—Ç—ñ–≤"
        RunPerson.last_activity(call)

@router1.callback_query(F.data == "cabinet")
async def callback_inline(call):
        builder = InlineKeyboardBuilder()
        builder.button(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back')
        builder.adjust(1)
        await call.message.edit_text(f'–í–∞—à —Å—Ç–∞—Ç—É—Å: '+ profile_info_status_func() +'\n' +
                                     '–í–∞—à –±–∞–ª–∞–Ω—Å: ' + profile_info_money_func(), reply_markup=builder.as_markup(),
                                     parse_mode="Markdown")

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ —Å–≤–æ—î–º—É –∫–∞–±—ñ–Ω–µ—Ç—ñ"
        RunPerson.last_activity(call)

@router1.callback_query(F.data == "operator")
async def callback_inline(call):
        builder = InlineKeyboardBuilder()
        builder.button(text='üë§–û–ø–µ—Ä–∞—Ç–æ—Ä', url='https://www.youtube.com/')
        builder.button(text='üõ†üë§–¢–µ—Ö. –û–ø–µ—Ä–∞—Ç–æ—Ä', url='https://www.youtube.com/')
        builder.button(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back')
        builder.adjust(1)
        await call.message.edit_text('–û–ø–µ—Ä–∞—Ç–æ—Ä–∏: ', reply_markup=builder.as_markup())

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –æ–ø–µ—Ä–∞—Ç–æ—Ä—ñ–≤"
        RunPerson.last_activity(call)

@router1.callback_query(F.data == "balance")
async def callback_inline(call):
        await call.message.delete()
        builder = InlineKeyboardBuilder()
        builder.button(text='‚ûï–ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –±–∞–ª–∞–Ω—Åüí≤', callback_data='USD TRC20')
        builder.button(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back_delete_in_menu')
        builder.adjust(1)
        s = '„Ö§„Ö§„Ö§„Ö§„Ö§üìí–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—èüìí„Ö§„Ö§„Ö§„Ö§\n1.–ô–¥–∏ –Ω–∞—Ö—É–π.'

        await call.message.answer_photo("https://img2.joyreactor.cc/pics/post/%D0%BE%D0%B1%D0%B5%D0%B7%D1%8C%D1%8F%D0%BD%D0%B0-%D0%B2%D0%B8%D0%B4%D0%B5%D0%BE-7212041.jpeg", s, reply_markup=builder.as_markup())

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É"
        RunPerson.last_activity(call)

@router1.callback_query(F.data == "back_balance")
async def callback_inline(call):
        await call.message.delete()
        builder = InlineKeyboardBuilder()
        builder.button(text='‚ûï–ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –±–∞–ª–∞–Ω—Åüí≤', callback_data='USD TRC20')
        builder.button(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back_delete_in_menu')
        builder.adjust(1)
        s = '„Ö§„Ö§„Ö§„Ö§„Ö§üìí–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—èüìí„Ö§„Ö§„Ö§„Ö§\n1.–ô–¥–∏ –Ω–∞—Ö—É–π.'

        await call.message.answer_photo("https://img2.joyreactor.cc/pics/post/%D0%BE%D0%B1%D0%B5%D0%B7%D1%8C%D1%8F%D0%BD%D0%B0-%D0%B2%D0%B8%D0%B4%D0%B5%D0%BE-7212041.jpeg", s, reply_markup=builder.as_markup())

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É"
        RunPerson.last_activity(call)

@router1.callback_query(F.data == "back_delete")
async def callback_inline(call):
        await call.message.delete()

@router1.callback_query(F.data == "back_delete_in_menu")
async def callback_inline(call):
        await call.message.delete()
        builder = InlineKeyboardBuilder()
        builder.button(text='üè≥Ô∏è–°—Ç–∞—Ä—Ç', callback_data='start')
        builder.button(text='üì∞–ù–æ–≤–∏–Ω–∏', callback_data='news')
        builder.button(text='üí¨–ß–∞—Ç', callback_data='chat')
        builder.button(text='üóÑ–ö–∞–±—ñ–Ω–µ—Ç', callback_data='cabinet')
        builder.button(text='üë§–û–ø–µ—Ä–∞—Ç–æ—Ä', callback_data='operator')
        builder.button(text='‚ûï–ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –ë–∞–ª–∞–Ω—Åüí≤', callback_data='balance')
        builder.adjust(1)
        await call.message.answer("üë®‚Äçüíª–ü—Ä–∏–≤—ñ—Ç, {0.full_name}\nüî¢–í–∞—à id: {0.id}".format(call.from_user),
                                    reply_markup=builder.as_markup())


        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–æ–º—É –º–µ–Ω—é"
        RunPerson.last_activity(call)

@router1.callback_query(F.data == "USD TRC20")
async def callback_inline(call):
        await call.message.delete()
        builder = InlineKeyboardBuilder()
        builder.button(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É —Ç–æ–≤–∞—Ä–∞', callback_data='back_balance')
        builder.adjust(1)
        await call.message.answer('\nM–∏ –≤–∏kop–∏c—Ço–≤—É—î–ºo –∫—Épc –üp–∏–≤a—Ç–ëa–Ω–∫—É ' + str(parcing()) + ' –ì–†–ù'
                                     '\n' +
                                     '\n–ö—É–Ω–∞ a–¥peca –¥–ª—è –øo–øo–≤–Ωe–Ω–Ω—è: ' + str(0) +
                                     '\n' +
                                     '\n–£–≤a–≥a! –º–∏ –øp–∏–π–ºa—î–ºo –ª–∏—àe TRC20 USDT!' +
                                     '\n' +
                                     '\nBci –∫o—à—Ç–∏ —èki –∑a–π–¥—É—Ç—å –Ωa a–¥pec—É –¥o: ' + (Time_operations.show_time_timedelta30()) +
                                     '\n–øo—Çpa–ø–ª—è—Ç—å –Ωa —Ç–≤i–π pax—É–Ωo–∫.', reply_markup=builder.as_markup())
        
        # RunOrder_manipulation = order_manipulation()
        # RunOrder_manipulation.create_order()
        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É(–í –ø—Ä–æ—Ü–µ—Å—Å—ñ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É)"
        RunPerson.last_activity(call)
        await asyncio.sleep(3600)
        await bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text='–ß–∞—Å –¥–ª—è –æ–ø–ª–∞—Ç–∏ —Ä–∞—Ö—É–Ω–∫—É –±—É–≤ –≤–∏—á–µ—Ä–ø–∞–Ω–∏–π.\n–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É...')