from Functions.USER_Profile import profile_info_money_func, profile_info_status_func
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from Functions.KUNA_API import parcing, order_manipulation
from Functions.USER_activity import user_activity
from Functions.INPUT_Time import Time_operations
from aiogram import Bot, Dispatcher, types, Router, F
from Functions.BOT_settings import TOKEN
import asyncio
import pygame

bot = Bot(token=TOKEN)
dp = Router()
router = Router()

print("Bot started!\nLog:")
@dp.message(F.TEXT)
async def inline_key(call: types.Message):
    startmenu = InlineKeyboardMarkup(row_width=1)
    start = InlineKeyboardButton(text='üè≥Ô∏è–°—Ç–∞—Ä—Ç', callback_data='start')
    news = InlineKeyboardButton(text='üì∞–ù–æ–≤–∏–Ω–∏', callback_data='news')
    chat = InlineKeyboardButton(text='üí¨–ß–∞—Ç', callback_data='chat')
    cabinet = InlineKeyboardButton(text='üóÑ–ö–∞–±—ñ–Ω–µ—Ç', callback_data='cabinet')
    bobrator = InlineKeyboardButton(text='üë§–û–ø–µ—Ä–∞—Ç–æ—Ä', callback_data='operator')
    balance = InlineKeyboardButton(text='‚ûï–ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –ë–∞–ª–∞–Ω—Åüí≤', callback_data='balance')
    startmenu.add(start, news, chat, cabinet, bobrator, balance)
    await call.answer("üë®‚Äçüíª–ü—Ä–∏–≤—ñ—Ç, {0.username}\nüî¢–í–∞—à id: {0.id} ".format(call.from_user),
                                 reply_markup=startmenu)

    RunPerson = user_activity()
    RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–æ–º—É –º–µ–Ω—é"
    RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "back")
async def callback_inline(call: CallbackQuery):
        mainmenu = InlineKeyboardMarkup(row_width=1)
        start = InlineKeyboardButton(text='üè≥Ô∏è–°—Ç–∞—Ä—Ç', callback_data='start')
        news = InlineKeyboardButton(text='üì∞–ù–æ–≤–∏–Ω–∏', callback_data='news')
        chat = InlineKeyboardButton(text='üí¨–ß–∞—Ç', callback_data='chat')
        cabinet = InlineKeyboardButton(text='üóÑ–ö–∞–±—ñ–Ω–µ—Ç', callback_data='cabinet')
        bobrator = InlineKeyboardButton(text='üë§–û–ø–µ—Ä–∞—Ç–æ—Ä', callback_data='operator')
        balance = InlineKeyboardButton(text='‚ûï–ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –ë–∞–ª–∞–Ω—Åüí≤', callback_data='balance')
        mainmenu.add(start, news, chat, cabinet, bobrator, balance)
        await call.message.edit_text('üë®‚Äçüíª–ü—Ä–∏–≤—ñ—Ç, {0.username}\nüî¢–í–∞—à id: {0.id}'.format(call.from_user),
                                     reply_markup=mainmenu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–µ –º–µ–Ω—é"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "news")
async def callback_inline(call: CallbackQuery):
        mainmenu = InlineKeyboardMarkup(row_width=1)
        back = InlineKeyboardButton(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back')
        mainmenu.add(back)
        await call.message.edit_text('–ù–æ–≤–∏–Ω–∏: (–Ω–µ–º–∞—î)', reply_markup=mainmenu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –Ω–æ–≤–∏–Ω"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "chat")
async def callback_inline(call: CallbackQuery):
        mainmenu = InlineKeyboardMarkup(row_width=1)
        btn1 = InlineKeyboardButton(text='–ù–∞—à —á–∞—Ç', url='https://www.youtube.com/')
        back = InlineKeyboardButton(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back')
        mainmenu.add(btn1, back)
        await call.message.edit_text('–ß–∞—Ç–∏: ', reply_markup=mainmenu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é —á–∞—Ç—ñ–≤"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "cabinet")
async def callback_inline(call: CallbackQuery):
        mainmenu = InlineKeyboardMarkup(row_width=1)
        back = InlineKeyboardButton(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back')
        mainmenu.add(back)
        await call.message.edit_text(f'–í–∞—à —Å—Ç–∞—Ç—É—Å: '+ profile_info_status_func() +'\n' +
                                     '–í–∞—à –±–∞–ª–∞–Ω—Å: ' + profile_info_money_func(), reply_markup=mainmenu,
                                     parse_mode="Markdown")

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ —Å–≤–æ—î–º—É –∫–∞–±—ñ–Ω–µ—Ç—ñ"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "operator")
async def callback_inline(call: CallbackQuery):
        mainmenu = InlineKeyboardMarkup(row_width=1)
        btn1 = InlineKeyboardButton(text='üë§–û–ø–µ—Ä–∞—Ç–æ—Ä', url='https://www.youtube.com/')
        btn2 = InlineKeyboardButton(text='üõ†üë§–¢–µ—Ö. –û–ø–µ—Ä–∞—Ç–æ—Ä', url='https://www.youtube.com/')
        back = InlineKeyboardButton(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back')
        mainmenu.add(btn1, btn2, back)
        await call.message.edit_text('–û–ø–µ—Ä–∞—Ç–æ—Ä–∏: ', reply_markup=mainmenu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –æ–ø–µ—Ä–∞—Ç–æ—Ä—ñ–≤"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "balance")
async def callback_inline(call: CallbackQuery):
        balance_menu = InlineKeyboardMarkup(row_width=1)
        pay_balance = InlineKeyboardButton(text='‚ûï–ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –±–∞–ª–∞–Ω—Åüí≤', callback_data='USD TRC20')
        back = InlineKeyboardButton(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back_delete')
        balance_menu.add(pay_balance, back)
        s = '„Ö§„Ö§„Ö§„Ö§„Ö§üìí–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—èüìí„Ö§„Ö§„Ö§„Ö§\n1.–ô–¥–∏ –Ω–∞—Ö—É–π.'

        await call.message.answer_photo("https://img2.joyreactor.cc/pics/post/%D0%BE%D0%B1%D0%B5%D0%B7%D1%8C%D1%8F%D0%BD%D0%B0-%D0%B2%D0%B8%D0%B4%D0%B5%D0%BE-7212041.jpeg", s, reply_markup=balance_menu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "back_balance")
async def callback_inline(call: CallbackQuery):
        await call.message.delete()
        balance_menu = InlineKeyboardMarkup(row_width=1)
        pay_balance = InlineKeyboardButton(text='‚ûï–ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –±–∞–ª–∞–Ω—Åüí≤', callback_data='USD TRC20')
        back = InlineKeyboardButton(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back_delete')
        balance_menu.add(pay_balance, back)
        s = '„Ö§„Ö§„Ö§„Ö§„Ö§üìí–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—èüìí„Ö§„Ö§„Ö§„Ö§\n1.–ô–¥–∏ –Ω–∞—Ö—É–π.'

        await call.message.answer_photo("https://img2.joyreactor.cc/pics/post/%D0%BE%D0%B1%D0%B5%D0%B7%D1%8C%D1%8F%D0%BD%D0%B0-%D0%B2%D0%B8%D0%B4%D0%B5%D0%BE-7212041.jpeg", s, reply_markup=balance_menu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "back_delete")
async def callback_inline(call: CallbackQuery):
        await call.message.delete()

@dp.callback_query_handler(lambda call: call.data == "USD TRC20")
async def callback_inline(call: CallbackQuery):
        await call.message.delete()
        complete_pay_menu = InlineKeyboardMarkup(row_width=1)
        back = InlineKeyboardButton(
            text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É —Ç–æ–≤–∞—Ä–∞', callback_data='back_balance')
        complete_pay_menu.add(back)
        await call.message.answer('\nM–∏ –≤–∏kop–∏c—Ço–≤—É—î–ºo –∫—Épc –üp–∏–≤a—Ç–ëa–Ω–∫—É ' + str(parcing()) + ' –ì–†–ù'
                                     '\n' +
                                     '\n–ö—É–Ω–∞ a–¥peca –¥–ª—è –øo–øo–≤–Ωe–Ω–Ω—è: ' + str(0) +
                                     '\n' +
                                     '\n–£–≤a–≥a! –º–∏ –øp–∏–π–ºa—î–ºo –ª–∏—àe TRC20 USDT!' +
                                     '\n' +
                                     '\nBci –∫o—à—Ç–∏ —èki –∑a–π–¥—É—Ç—å –Ωa a–¥pec—É –¥o: ' + (Time_operations.show_time_timedelta30()) +
                                     '\n–øo—Çpa–ø–ª—è—Ç—å –Ωa —Ç–≤i–π pax—É–Ωo–∫.', reply_markup=complete_pay_menu)
        # RunOrder_manipulation = order_manipulation()
        # RunOrder_manipulation.create_order()
        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É(–í –ø—Ä–æ—Ü–µ—Å—Å—ñ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É)"
        RunPerson.last_activity(call)
        await asyncio.sleep(3600)
        # RunOrder_manipulation.cancel_order()
        await bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text='–ß–∞—Å –¥–ª—è –æ–ø–ª–∞—Ç–∏ —Ä–∞—Ö—É–Ω–∫—É –±—É–≤ –≤–∏—á–µ—Ä–ø–∞–Ω–∏–π.\n–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É...')

@dp.callback_query_handler(lambda call: call.data == "start")
async def callback_inline(call: CallbackQuery):
        mainmenu = InlineKeyboardMarkup(row_width=1)
        btn1 = InlineKeyboardButton(text='üåÜ–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—åüåÜ', callback_data='btn_Franik')
        back = InlineKeyboardButton(text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ—á–∞—Ç–æ–∫', callback_data='back')
        mainmenu.add(btn1, back)
        await call.message.edit_text('–ó–∞–¥–∞–π –æ–±–ª–∞—Å—Ç—å', reply_markup=mainmenu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä–∞ –æ–±–ª–∞—Å—Ç–µ–π"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "btn_Franik")
async def callback_inline(call: CallbackQuery):
        Franik_menu = InlineKeyboardMarkup(row_width=1)
        btn1 = InlineKeyboardButton(
            text='üåÜ—Å–º—Ç.–û—Ç–∏–Ω—ñ—èüåÜ', callback_data='Otynia')
        btn2 = InlineKeyboardButton(
            text='üåá–£–≥–æ—Ä–Ω–∏–∫–∏(–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫)üåá', callback_data='Ugornyky_Franik')
        btn3 = InlineKeyboardButton(
            text='üèô–£–≥–æ—Ä–Ω–∏–∫–∏(–ö–æ–ª–æ–º–∏—è)üèô', callback_data='Ugornyky_Kolomuya')
        btn4 = InlineKeyboardButton(
            text='üåÜ–Ü–≤–∞–Ω–æ - –§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫üåÜ', callback_data='btn2_Franik')
        btn5 = InlineKeyboardButton(
            text='üåá–ö–æ–ª–æ–º–∏—èüåá', callback_data='Kolomuya')
        back2 = InlineKeyboardButton(
            text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É –æ–±–ª–∞—Å—Ç—ñ(–µ–π)', callback_data='start')
        Franik_menu.add(btn1, btn2, btn3, btn4, btn5, back2)
        await call.message.edit_text('–ó–∞–¥–∞–π –ú—ñ—Å—Ç–æ/—Å–º—Ç./—Å–µ–ª–æ', reply_markup=Franik_menu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä–∞ –ú—ñ—Å—Ç/—Å–º—Ç./—Å—ñ–ª"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "Otynia")
async def callback_inline(call: CallbackQuery):
        tovar_menu = InlineKeyboardMarkup(row_width=1)
        tovar1 = InlineKeyboardButton(
            text='üç∫–ø–∏–≤–æüç∫ —ñ ü•ú–≥–æ—Ä—ñ—à–∫–∏ü•ú', callback_data='pivo+gorishki')
        back = InlineKeyboardButton(
            text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É –ú—ñ—Å—Ç/—Å–º—Ç./—Å–µ–ª', callback_data='btn_Franik')
        tovar_menu.add(tovar1, back)
        await call.message.edit_text('–í–∏–±–∏—Ä–∞–π:)', reply_markup=tovar_menu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞(–û—Ç–∏–Ω—ñ—è)"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "Ugornyky_Franik")
async def callback_inline(call: CallbackQuery):
        tovar_menu = InlineKeyboardMarkup(row_width=1)
        tovar1 = InlineKeyboardButton(
            text='üç∫–ø–∏–≤–æüç∫ —ñ ü•ú–≥–æ—Ä—ñ—à–∫–∏ü•ú', callback_data='pivo+gorishki')
        back = InlineKeyboardButton(
            text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É –ú—ñ—Å—Ç/—Å–º—Ç./—Å–µ–ª', callback_data='btn_Franik')
        tovar_menu.add(tovar1, back)
        await call.message.edit_text('–í–∏–±–∏—Ä–∞–π:)', reply_markup=tovar_menu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞(–£–≥–æ—Ä–Ω–∏–∫–∏, –§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å)"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "Ugornyky_Kolomuya")
async def callback_inline(call: CallbackQuery):
        tovar_menu = InlineKeyboardMarkup(row_width=1)
        tovar1 = InlineKeyboardButton(
            text='üç∫–ø–∏–≤–æüç∫ —ñ ü•ú–≥–æ—Ä—ñ—à–∫–∏ü•ú', callback_data='pivo+gorishki')
        back = InlineKeyboardButton(
            text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É –ú—ñ—Å—Ç/—Å–º—Ç./—Å–µ–ª', callback_data='btn_Franik')
        tovar_menu.add(tovar1, back)
        await call.message.edit_text('–í–∏–±–∏—Ä–∞–π:)', reply_markup=tovar_menu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞(–£–≥–æ—Ä–Ω–∏–∫–∏, –ö–æ–ª–æ–º–∏–π—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å)"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "btn2_Franik")
async def callback_inline(call: CallbackQuery):
        tovar_menu = InlineKeyboardMarkup(row_width=1)
        tovar1 = InlineKeyboardButton(
            text='üç∫–ø–∏–≤–æüç∫ —ñ ü•ú–≥–æ—Ä—ñ—à–∫–∏ü•ú', callback_data='pivo+gorishki')
        back = InlineKeyboardButton(
            text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É –ú—ñ—Å—Ç/—Å–º—Ç./—Å–µ–ª', callback_data='btn_Franik')
        tovar_menu.add(tovar1, back)
        await call.message.edit_text('–í–∏–±–∏—Ä–∞–π:)', reply_markup=tovar_menu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞(–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫)"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "Kolomuya")
async def callback_inline(call: CallbackQuery):
        tovar_menu = InlineKeyboardMarkup(row_width=1)
        tovar1 = InlineKeyboardButton(
            text='üç∫–ø–∏–≤–æüç∫ —ñ ü•ú–≥–æ—Ä—ñ—à–∫–∏ü•ú', callback_data='pivo+gorishki')
        back = InlineKeyboardButton(
            text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É –ú—ñ—Å—Ç/—Å–º—Ç./—Å—ñ–ª', callback_data='btn_Franik')
        tovar_menu.add(tovar1, back)
        await call.message.edit_text('–í–∏–±–∏—Ä–∞–π:)', reply_markup=tovar_menu)

        RunPerson = user_activity()
        RunPerson.user_location = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞(–ö–æ–ª–æ–º–∏—è)"
        RunPerson.last_activity(call)

@dp.callback_query_handler(lambda call: call.data == "pivo+gorishki")
async def callback_inline(call: CallbackQuery):
        pay_menu = InlineKeyboardMarkup(row_width=1)
        oplata_variantA = InlineKeyboardButton(
            text='‚úÖ–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏‚úÖ', callback_data='Accept_pivo+gorishki')
        back = InlineKeyboardButton(
            text='‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É —Ç–æ–≤–∞—Ä–∞', callback_data='back_delete')
        pay_menu.add(oplata_variantA, back)
        pivo_gorishki_content = f'–í–º—ñ—Å—Çüì¶\n–ü–∏–≤–æ: 90 –º—ñ–ª—ñ–ª—ñ—Ç—Ä—ñ–≤\n–ì–æ—Ä—ñ—à–∫–∏: 50 –≥—Ä–∞–º–º\n–¶—ñ–Ω–∞: .'
        await call.message.answer_photo('https://cdn.segodnya.ua/img/article/10156/63_main_new.1493069986.jpg', pivo_gorishki_content, reply_markup=pay_menu)

        RunPerson = user_activity()
        RunPerson.user_location = '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –º–µ–Ω—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ç–æ–≤–∞—Ä: –ü–∏–≤–æ —ñ –≥–æ—Ä—ñ—à–∫–∏(–ö–æ–ª–æ–º–∏—è)'
        RunPerson.last_activity(call)

try:
    pass
except Exception:
    pygame.mixer.init()
    pygame.mixer.music.load('exeption_sound.mp3')
    pygame.mixer.music.play(0)
